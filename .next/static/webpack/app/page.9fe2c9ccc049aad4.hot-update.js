"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./components/task-list.tsx":
/*!**********************************!*\
  !*** ./components/task-list.tsx ***!
  \**********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TaskList: function() { return /* binding */ TaskList; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var _components_ui_checkbox__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/components/ui/checkbox */ \"(app-pages-browser)/./components/ui/checkbox.tsx\");\n/* harmony import */ var _components_ui_button__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/components/ui/button */ \"(app-pages-browser)/./components/ui/button.tsx\");\n/* harmony import */ var _barrel_optimize_names_GripVertical_Trash2_lucide_react__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! __barrel_optimize__?names=GripVertical,Trash2!=!lucide-react */ \"(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/grip-vertical.js\");\n/* harmony import */ var _barrel_optimize_names_GripVertical_Trash2_lucide_react__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! __barrel_optimize__?names=GripVertical,Trash2!=!lucide-react */ \"(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/trash-2.js\");\n/* harmony import */ var _components_ui_scroll_area__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/components/ui/scroll-area */ \"(app-pages-browser)/./components/ui/scroll-area.tsx\");\n/* harmony import */ var react_beautiful_dnd__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react-beautiful-dnd */ \"(app-pages-browser)/./node_modules/react-beautiful-dnd/dist/react-beautiful-dnd.esm.js\");\n\n\n\n\n\n\nfunction TaskList(param) {\n    let { tasks, toggleComplete, deleteTask, reorderTasks } = param;\n    const onDragEnd = (result)=>{\n        if (!result.destination) {\n            return;\n        }\n        console.log(\"Reordering tasks:\", result.source.index, result.destination.index);\n        reorderTasks(result.source.index, result.destination.index);\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_beautiful_dnd__WEBPACK_IMPORTED_MODULE_4__.DragDropContext, {\n        onDragEnd: onDragEnd,\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_beautiful_dnd__WEBPACK_IMPORTED_MODULE_4__.Droppable, {\n            droppableId: \"taskList\",\n            children: (provided)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_scroll_area__WEBPACK_IMPORTED_MODULE_3__.ScrollArea, {\n                    className: \"h-[280px] w-full pr-4\",\n                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"ul\", {\n                        ...provided.droppableProps,\n                        ref: provided.innerRef,\n                        className: \"space-y-4\",\n                        children: [\n                            tasks.map((task, index)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_beautiful_dnd__WEBPACK_IMPORTED_MODULE_4__.Draggable, {\n                                    draggableId: task.id,\n                                    index: index,\n                                    children: (provided)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"li\", {\n                                            ref: provided.innerRef,\n                                            ...provided.draggableProps,\n                                            className: \"flex items-center justify-between bg-[#141414] p-4 rounded-lg\",\n                                            children: [\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                    className: \"flex items-center space-x-3\",\n                                                    children: [\n                                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                            ...provided.dragHandleProps,\n                                                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_GripVertical_Trash2_lucide_react__WEBPACK_IMPORTED_MODULE_5__[\"default\"], {\n                                                                className: \"h-5 w-5 text-[rgba(156,163,175,1)]\"\n                                                            }, void 0, false, {\n                                                                fileName: \"C:\\\\Users\\\\worra\\\\trade-streak\\\\components\\\\task-list.tsx\",\n                                                                lineNumber: 41,\n                                                                columnNumber: 27\n                                                            }, this)\n                                                        }, void 0, false, {\n                                                            fileName: \"C:\\\\Users\\\\worra\\\\trade-streak\\\\components\\\\task-list.tsx\",\n                                                            lineNumber: 40,\n                                                            columnNumber: 25\n                                                        }, this),\n                                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_checkbox__WEBPACK_IMPORTED_MODULE_1__.Checkbox, {\n                                                            checked: task.completed,\n                                                            onCheckedChange: ()=>toggleComplete(task.id),\n                                                            className: \"border-[rgba(191,219,254,0.5)]\"\n                                                        }, void 0, false, {\n                                                            fileName: \"C:\\\\Users\\\\worra\\\\trade-streak\\\\components\\\\task-list.tsx\",\n                                                            lineNumber: 43,\n                                                            columnNumber: 25\n                                                        }, this),\n                                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                                            className: \"text-[rgba(229,231,235,1)]\",\n                                                            children: task.content\n                                                        }, void 0, false, {\n                                                            fileName: \"C:\\\\Users\\\\worra\\\\trade-streak\\\\components\\\\task-list.tsx\",\n                                                            lineNumber: 48,\n                                                            columnNumber: 25\n                                                        }, this)\n                                                    ]\n                                                }, void 0, true, {\n                                                    fileName: \"C:\\\\Users\\\\worra\\\\trade-streak\\\\components\\\\task-list.tsx\",\n                                                    lineNumber: 39,\n                                                    columnNumber: 23\n                                                }, this),\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_button__WEBPACK_IMPORTED_MODULE_2__.Button, {\n                                                    variant: \"ghost\",\n                                                    size: \"icon\",\n                                                    onClick: ()=>deleteTask(task.id),\n                                                    className: \"text-[rgba(156,163,175,1)] hover:text-[rgba(229,231,235,1)]\",\n                                                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_GripVertical_Trash2_lucide_react__WEBPACK_IMPORTED_MODULE_6__[\"default\"], {\n                                                        className: \"h-5 w-5\"\n                                                    }, void 0, false, {\n                                                        fileName: \"C:\\\\Users\\\\worra\\\\trade-streak\\\\components\\\\task-list.tsx\",\n                                                        lineNumber: 56,\n                                                        columnNumber: 25\n                                                    }, this)\n                                                }, void 0, false, {\n                                                    fileName: \"C:\\\\Users\\\\worra\\\\trade-streak\\\\components\\\\task-list.tsx\",\n                                                    lineNumber: 50,\n                                                    columnNumber: 23\n                                                }, this)\n                                            ]\n                                        }, void 0, true, {\n                                            fileName: \"C:\\\\Users\\\\worra\\\\trade-streak\\\\components\\\\task-list.tsx\",\n                                            lineNumber: 34,\n                                            columnNumber: 21\n                                        }, this)\n                                }, task.id, false, {\n                                    fileName: \"C:\\\\Users\\\\worra\\\\trade-streak\\\\components\\\\task-list.tsx\",\n                                    lineNumber: 32,\n                                    columnNumber: 17\n                                }, this)),\n                            provided.placeholder\n                        ]\n                    }, void 0, true, {\n                        fileName: \"C:\\\\Users\\\\worra\\\\trade-streak\\\\components\\\\task-list.tsx\",\n                        lineNumber: 30,\n                        columnNumber: 13\n                    }, this)\n                }, void 0, false, {\n                    fileName: \"C:\\\\Users\\\\worra\\\\trade-streak\\\\components\\\\task-list.tsx\",\n                    lineNumber: 29,\n                    columnNumber: 11\n                }, this)\n        }, void 0, false, {\n            fileName: \"C:\\\\Users\\\\worra\\\\trade-streak\\\\components\\\\task-list.tsx\",\n            lineNumber: 27,\n            columnNumber: 7\n        }, this)\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\worra\\\\trade-streak\\\\components\\\\task-list.tsx\",\n        lineNumber: 26,\n        columnNumber: 5\n    }, this);\n}\n_c = TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2NvbXBvbmVudHMvdGFzay1saXN0LnRzeCIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUFDbUQ7QUFDSjtBQUNJO0FBQ0s7QUFDK0I7QUFTaEYsU0FBU1EsU0FBUyxLQUFrRTtRQUFsRSxFQUFFQyxLQUFLLEVBQUVDLGNBQWMsRUFBRUMsVUFBVSxFQUFFQyxZQUFZLEVBQWlCLEdBQWxFO0lBQ3ZCLE1BQU1DLFlBQVksQ0FBQ0M7UUFDakIsSUFBSSxDQUFDQSxPQUFPQyxXQUFXLEVBQUU7WUFDdkI7UUFDRjtRQUVBQyxRQUFRQyxHQUFHLENBQUMscUJBQXFCSCxPQUFPSSxNQUFNLENBQUNDLEtBQUssRUFBRUwsT0FBT0MsV0FBVyxDQUFDSSxLQUFLO1FBQzlFUCxhQUFhRSxPQUFPSSxNQUFNLENBQUNDLEtBQUssRUFBRUwsT0FBT0MsV0FBVyxDQUFDSSxLQUFLO0lBQzVEO0lBRUEscUJBQ0UsOERBQUNkLGdFQUFlQTtRQUFDUSxXQUFXQTtrQkFDMUIsNEVBQUNQLDBEQUFTQTtZQUFDYyxhQUFZO3NCQUNwQixDQUFDQyx5QkFDQSw4REFBQ2pCLGtFQUFVQTtvQkFBQ2tCLFdBQVU7OEJBQ3BCLDRFQUFDQzt3QkFBSSxHQUFHRixTQUFTRyxjQUFjO3dCQUFFQyxLQUFLSixTQUFTSyxRQUFRO3dCQUFFSixXQUFVOzs0QkFDaEViLE1BQU1rQixHQUFHLENBQUMsQ0FBQ0MsTUFBTVQsc0JBQ2hCLDhEQUFDWiwwREFBU0E7b0NBQWVzQixhQUFhRCxLQUFLRSxFQUFFO29DQUFFWCxPQUFPQTs4Q0FDbkQsQ0FBQ0UseUJBQ0EsOERBQUNVOzRDQUNDTixLQUFLSixTQUFTSyxRQUFROzRDQUNyQixHQUFHTCxTQUFTVyxjQUFjOzRDQUMzQlYsV0FBVTs7OERBRVYsOERBQUNXO29EQUFJWCxXQUFVOztzRUFDYiw4REFBQ1c7NERBQUssR0FBR1osU0FBU2EsZUFBZTtzRUFDL0IsNEVBQUMvQiwrRkFBWUE7Z0VBQUNtQixXQUFVOzs7Ozs7Ozs7OztzRUFFMUIsOERBQUN0Qiw2REFBUUE7NERBQ1BtQyxTQUFTUCxLQUFLUSxTQUFTOzREQUN2QkMsaUJBQWlCLElBQU0zQixlQUFla0IsS0FBS0UsRUFBRTs0REFDN0NSLFdBQVU7Ozs7OztzRUFFWiw4REFBQ2dCOzREQUFLaEIsV0FBVTtzRUFBOEJNLEtBQUtXLE9BQU87Ozs7Ozs7Ozs7Ozs4REFFNUQsOERBQUN0Qyx5REFBTUE7b0RBQ0x1QyxTQUFRO29EQUNSQyxNQUFLO29EQUNMQyxTQUFTLElBQU0vQixXQUFXaUIsS0FBS0UsRUFBRTtvREFDakNSLFdBQVU7OERBRVYsNEVBQUNwQiwrRkFBTUE7d0RBQUNvQixXQUFVOzs7Ozs7Ozs7Ozs7Ozs7OzttQ0F4QlZNLEtBQUtFLEVBQUU7Ozs7OzRCQThCeEJULFNBQVNzQixXQUFXOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBT25DO0tBdERnQm5DIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL2NvbXBvbmVudHMvdGFzay1saXN0LnRzeD80OGNkIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFRhc2sgfSBmcm9tIFwiQC90eXBlc1wiXG5pbXBvcnQgeyBDaGVja2JveCB9IGZyb20gXCJAL2NvbXBvbmVudHMvdWkvY2hlY2tib3hcIlxuaW1wb3J0IHsgQnV0dG9uIH0gZnJvbSBcIkAvY29tcG9uZW50cy91aS9idXR0b25cIlxuaW1wb3J0IHsgVHJhc2gyLCBHcmlwVmVydGljYWwgfSBmcm9tIFwibHVjaWRlLXJlYWN0XCJcbmltcG9ydCB7IFNjcm9sbEFyZWEgfSBmcm9tIFwiQC9jb21wb25lbnRzL3VpL3Njcm9sbC1hcmVhXCJcbmltcG9ydCB7IERyYWdEcm9wQ29udGV4dCwgRHJvcHBhYmxlLCBEcmFnZ2FibGUsIERyb3BSZXN1bHQgfSBmcm9tICdyZWFjdC1iZWF1dGlmdWwtZG5kJ1xuXG5pbnRlcmZhY2UgVGFza0xpc3RQcm9wcyB7XG4gIHRhc2tzOiBUYXNrW11cbiAgdG9nZ2xlQ29tcGxldGU6IChpZDogc3RyaW5nKSA9PiB2b2lkXG4gIGRlbGV0ZVRhc2s6IChpZDogc3RyaW5nKSA9PiB2b2lkXG4gIHJlb3JkZXJUYXNrczogKHN0YXJ0SW5kZXg6IG51bWJlciwgZW5kSW5kZXg6IG51bWJlcikgPT4gdm9pZFxufVxuXG5leHBvcnQgZnVuY3Rpb24gVGFza0xpc3QoeyB0YXNrcywgdG9nZ2xlQ29tcGxldGUsIGRlbGV0ZVRhc2ssIHJlb3JkZXJUYXNrcyB9OiBUYXNrTGlzdFByb3BzKSB7XG4gIGNvbnN0IG9uRHJhZ0VuZCA9IChyZXN1bHQ6IERyb3BSZXN1bHQpID0+IHtcbiAgICBpZiAoIXJlc3VsdC5kZXN0aW5hdGlvbikge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGNvbnNvbGUubG9nKCdSZW9yZGVyaW5nIHRhc2tzOicsIHJlc3VsdC5zb3VyY2UuaW5kZXgsIHJlc3VsdC5kZXN0aW5hdGlvbi5pbmRleCk7XG4gICAgcmVvcmRlclRhc2tzKHJlc3VsdC5zb3VyY2UuaW5kZXgsIHJlc3VsdC5kZXN0aW5hdGlvbi5pbmRleCk7XG4gIH07XG5cbiAgcmV0dXJuIChcbiAgICA8RHJhZ0Ryb3BDb250ZXh0IG9uRHJhZ0VuZD17b25EcmFnRW5kfT5cbiAgICAgIDxEcm9wcGFibGUgZHJvcHBhYmxlSWQ9XCJ0YXNrTGlzdFwiPlxuICAgICAgICB7KHByb3ZpZGVkKSA9PiAoXG4gICAgICAgICAgPFNjcm9sbEFyZWEgY2xhc3NOYW1lPVwiaC1bMjgwcHhdIHctZnVsbCBwci00XCI+XG4gICAgICAgICAgICA8dWwgey4uLnByb3ZpZGVkLmRyb3BwYWJsZVByb3BzfSByZWY9e3Byb3ZpZGVkLmlubmVyUmVmfSBjbGFzc05hbWU9XCJzcGFjZS15LTRcIj5cbiAgICAgICAgICAgICAge3Rhc2tzLm1hcCgodGFzaywgaW5kZXgpID0+IChcbiAgICAgICAgICAgICAgICA8RHJhZ2dhYmxlIGtleT17dGFzay5pZH0gZHJhZ2dhYmxlSWQ9e3Rhc2suaWR9IGluZGV4PXtpbmRleH0+XG4gICAgICAgICAgICAgICAgICB7KHByb3ZpZGVkKSA9PiAoXG4gICAgICAgICAgICAgICAgICAgIDxsaVxuICAgICAgICAgICAgICAgICAgICAgIHJlZj17cHJvdmlkZWQuaW5uZXJSZWZ9XG4gICAgICAgICAgICAgICAgICAgICAgey4uLnByb3ZpZGVkLmRyYWdnYWJsZVByb3BzfVxuICAgICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cImZsZXggaXRlbXMtY2VudGVyIGp1c3RpZnktYmV0d2VlbiBiZy1bIzE0MTQxNF0gcC00IHJvdW5kZWQtbGdcIlxuICAgICAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJmbGV4IGl0ZW1zLWNlbnRlciBzcGFjZS14LTNcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgey4uLnByb3ZpZGVkLmRyYWdIYW5kbGVQcm9wc30+XG4gICAgICAgICAgICAgICAgICAgICAgICAgIDxHcmlwVmVydGljYWwgY2xhc3NOYW1lPVwiaC01IHctNSB0ZXh0LVtyZ2JhKDE1NiwxNjMsMTc1LDEpXVwiIC8+XG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxDaGVja2JveFxuICAgICAgICAgICAgICAgICAgICAgICAgICBjaGVja2VkPXt0YXNrLmNvbXBsZXRlZH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgb25DaGVja2VkQ2hhbmdlPXsoKSA9PiB0b2dnbGVDb21wbGV0ZSh0YXNrLmlkKX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwiYm9yZGVyLVtyZ2JhKDE5MSwyMTksMjU0LDAuNSldXCJcbiAgICAgICAgICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9XCJ0ZXh0LVtyZ2JhKDIyOSwyMzEsMjM1LDEpXVwiPnt0YXNrLmNvbnRlbnR9PC9zcGFuPlxuICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgIDxCdXR0b25cbiAgICAgICAgICAgICAgICAgICAgICAgIHZhcmlhbnQ9XCJnaG9zdFwiXG4gICAgICAgICAgICAgICAgICAgICAgICBzaXplPVwiaWNvblwiXG4gICAgICAgICAgICAgICAgICAgICAgICBvbkNsaWNrPXsoKSA9PiBkZWxldGVUYXNrKHRhc2suaWQpfVxuICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwidGV4dC1bcmdiYSgxNTYsMTYzLDE3NSwxKV0gaG92ZXI6dGV4dC1bcmdiYSgyMjksMjMxLDIzNSwxKV1cIlxuICAgICAgICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxUcmFzaDIgY2xhc3NOYW1lPVwiaC01IHctNVwiIC8+XG4gICAgICAgICAgICAgICAgICAgICAgPC9CdXR0b24+XG4gICAgICAgICAgICAgICAgICAgIDwvbGk+XG4gICAgICAgICAgICAgICAgICApfVxuICAgICAgICAgICAgICAgIDwvRHJhZ2dhYmxlPlxuICAgICAgICAgICAgICApKX1cbiAgICAgICAgICAgICAge3Byb3ZpZGVkLnBsYWNlaG9sZGVyfVxuICAgICAgICAgICAgPC91bD5cbiAgICAgICAgICA8L1Njcm9sbEFyZWE+XG4gICAgICAgICl9XG4gICAgICA8L0Ryb3BwYWJsZT5cbiAgICA8L0RyYWdEcm9wQ29udGV4dD5cbiAgKVxufSJdLCJuYW1lcyI6WyJDaGVja2JveCIsIkJ1dHRvbiIsIlRyYXNoMiIsIkdyaXBWZXJ0aWNhbCIsIlNjcm9sbEFyZWEiLCJEcmFnRHJvcENvbnRleHQiLCJEcm9wcGFibGUiLCJEcmFnZ2FibGUiLCJUYXNrTGlzdCIsInRhc2tzIiwidG9nZ2xlQ29tcGxldGUiLCJkZWxldGVUYXNrIiwicmVvcmRlclRhc2tzIiwib25EcmFnRW5kIiwicmVzdWx0IiwiZGVzdGluYXRpb24iLCJjb25zb2xlIiwibG9nIiwic291cmNlIiwiaW5kZXgiLCJkcm9wcGFibGVJZCIsInByb3ZpZGVkIiwiY2xhc3NOYW1lIiwidWwiLCJkcm9wcGFibGVQcm9wcyIsInJlZiIsImlubmVyUmVmIiwibWFwIiwidGFzayIsImRyYWdnYWJsZUlkIiwiaWQiLCJsaSIsImRyYWdnYWJsZVByb3BzIiwiZGl2IiwiZHJhZ0hhbmRsZVByb3BzIiwiY2hlY2tlZCIsImNvbXBsZXRlZCIsIm9uQ2hlY2tlZENoYW5nZSIsInNwYW4iLCJjb250ZW50IiwidmFyaWFudCIsInNpemUiLCJvbkNsaWNrIiwicGxhY2Vob2xkZXIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./components/task-list.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./hooks/use-trade-streak.ts":
/*!***********************************!*\
  !*** ./hooks/use-trade-streak.ts ***!
  \***********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useTradeStreak: function() { return /* binding */ useTradeStreak; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _supabase_supabase_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @supabase/supabase-js */ \"(app-pages-browser)/./node_modules/@supabase/supabase-js/dist/module/index.js\");\n/* __next_internal_client_entry_do_not_use__ useTradeStreak auto */ \n\nconst supabase = (0,_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_1__.createClient)(\"https://azfvpokygmsgtztybdgf.supabase.co/\", \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImF6ZnZwb2t5Z21zZ3R6dHliZGdmIiwicm9sZSI6ImFub24iLCJpYXQiOjE3MjcxMTYyNjUsImV4cCI6MjA0MjY5MjI2NX0.qRR8SnnXKwEm6yxrtwAq7X7tazAFh-hoZm2nAI1YhYI\");\nfunction useTradeStreak(userId) {\n    const [projects, setProjects] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);\n    const [currentProject, setCurrentProject] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    const [tasks, setTasks] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);\n    const [streak, setStreak] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(0);\n    const [completedToday, setCompletedToday] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(0);\n    const [completedDays, setCompletedDays] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);\n    const [selectedYear, setSelectedYear] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(new Date().getFullYear());\n    const [availableYears, setAvailableYears] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);\n    const fetchProjects = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(async ()=>{\n        if (!userId) return;\n        const { data, error } = await supabase.from(\"projects\").select(\"*\").eq(\"user_id\", userId);\n        if (error) {\n            console.error(\"Error fetching projects:\", error);\n            return;\n        }\n        if (data) {\n            setProjects(data);\n            if (data.length > 0 && !currentProject) {\n                setCurrentProject(data[0]);\n            }\n        }\n    }, [\n        userId,\n        currentProject\n    ]);\n    const fetchTasks = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(async (projectId)=>{\n        const today = new Date().toISOString().split(\"T\")[0]; // Define today's date\n        const { data: allTasks, error: tasksError } = await supabase.from(\"tasks\").select(\"*\").eq(\"project_id\", projectId).order(\"task_order\", {\n            ascending: true\n        });\n        if (tasksError) {\n            console.error(\"Error fetching tasks:\", tasksError);\n            return;\n        }\n        const { count, error: countError } = await supabase.from(\"tasks\").select(\"*\", {\n            count: \"exact\",\n            head: true\n        }).eq(\"project_id\", projectId).eq(\"completed\", true).eq(\"completed_date\", today);\n        if (countError) {\n            console.error(\"Error counting completed tasks:\", countError);\n            return;\n        }\n        if (allTasks) {\n            setTasks(allTasks);\n            setCompletedToday(count || 0);\n            updateStats(allTasks, projectId);\n        }\n    }, []);\n    const fetchCompletedDays = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(async (projectId, year)=>{\n        const startDate = new Date(year, 0, 1).toISOString().split(\"T\")[0];\n        const endDate = new Date(year, 11, 31).toISOString().split(\"T\")[0];\n        const { data, error } = await supabase.from(\"tasks\").select(\"completed_date\").eq(\"project_id\", projectId).eq(\"completed\", true).gte(\"completed_date\", startDate).lte(\"completed_date\", endDate);\n        if (error) {\n            console.error(\"Error fetching completed days:\", error);\n            return;\n        }\n        if (data) {\n            const completedDays = data.map((task)=>{\n                const date = new Date(task.completed_date);\n                return Math.floor((date.getTime() - new Date(year, 0, 0).getTime()) / (24 * 60 * 60 * 1000));\n            });\n            setCompletedDays([\n                ...new Set(completedDays)\n            ]);\n        }\n    }, []);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        if (userId) {\n            fetchProjects();\n        }\n    }, [\n        userId,\n        fetchProjects\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        if (currentProject) {\n            fetchTasks(currentProject.id);\n        }\n    }, [\n        currentProject,\n        fetchTasks\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        if (currentProject && selectedYear) {\n            fetchCompletedDays(currentProject.id, selectedYear);\n        }\n    }, [\n        currentProject,\n        selectedYear,\n        fetchCompletedDays\n    ]);\n    const addProject = async (name, tradingDaysPerWeek, userId)=>{\n        const { data, error } = await supabase.from(\"projects\").insert({\n            name,\n            trading_days_per_week: tradingDaysPerWeek,\n            user_id: userId\n        }).select();\n        if (error) {\n            console.error(\"Error adding project:\", error);\n            return;\n        }\n        if (data && data.length > 0) {\n            const newProject = data[0];\n            setProjects((prevProjects)=>[\n                    ...prevProjects,\n                    newProject\n                ]);\n            setCurrentProject(newProject);\n        }\n    };\n    const addTask = async (content)=>{\n        if (content.trim() && currentProject && userId) {\n            const newTask = {\n                content: content.trim(),\n                project_id: currentProject.id,\n                completed: false,\n                completed_date: null,\n                user_id: userId\n            };\n            const { data, error } = await supabase.from(\"tasks\").insert(newTask).select();\n            if (error) {\n                console.error(\"Error adding task:\", error);\n                return;\n            }\n            if (data && data.length > 0) {\n                const addedTask = data[0];\n                const updatedTasks = [\n                    ...tasks,\n                    addedTask\n                ];\n                setTasks(updatedTasks);\n                updateStats(updatedTasks, currentProject.id);\n            }\n        }\n    };\n    const deleteTask = async (id)=>{\n        if (!currentProject) return;\n        const { error } = await supabase.from(\"tasks\").delete().eq(\"id\", id);\n        if (error) {\n            console.error(\"Error deleting task:\", error);\n            return;\n        }\n        const updatedTasks = tasks.filter((task)=>task.id !== id);\n        setTasks(updatedTasks);\n        updateStats(updatedTasks, currentProject.id);\n    };\n    const toggleComplete = async (id)=>{\n        if (!currentProject) return;\n        const task = tasks.find((t)=>t.id === id);\n        if (task) {\n            const updatedTask = {\n                ...task,\n                completed: !task.completed,\n                completed_date: !task.completed ? new Date().toISOString().split(\"T\")[0] : null\n            };\n            const { data, error } = await supabase.from(\"tasks\").update(updatedTask).eq(\"id\", id).select();\n            if (error) {\n                console.error(\"Error updating task:\", error);\n                return;\n            }\n            if (data && data.length > 0) {\n                const updatedTaskFromDB = data[0];\n                const updatedTasks = tasks.map((t)=>t.id === id ? updatedTaskFromDB : t);\n                setTasks(updatedTasks);\n                updateStats(updatedTasks, currentProject.id);\n            }\n        }\n    };\n    const updateStats = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(async (currentTasks, projectId)=>{\n        const today = new Date().toISOString().split(\"T\")[0];\n        const { count, error: countError } = await supabase.from(\"tasks\").select(\"*\", {\n            count: \"exact\",\n            head: true\n        }).eq(\"project_id\", projectId).eq(\"completed\", true).eq(\"completed_date\", today);\n        if (countError) {\n            console.error(\"Error counting completed tasks:\", countError);\n            return;\n        }\n        setCompletedToday(count || 0);\n        // Calculate streak\n        const sortedCompletedDates = [\n            ...new Set(currentTasks.filter((task)=>task.completed && task.project_id === projectId).map((task)=>task.completed_date).filter((date)=>date !== null).sort((a, b)=>new Date(b).getTime() - new Date(a).getTime()))\n        ];\n        let currentStreak = 0;\n        const date = new Date();\n        let previousDate = null;\n        for (const completedDate of sortedCompletedDates){\n            const currentDate = new Date(completedDate);\n            if (previousDate === null) {\n                currentStreak = 1;\n            } else {\n                const dayDifference = (previousDate.getTime() - currentDate.getTime()) / (1000 * 3600 * 24);\n                if (dayDifference === 1) {\n                    currentStreak++;\n                } else {\n                    break;\n                }\n            }\n            previousDate = currentDate;\n        }\n        setStreak(currentStreak);\n        // Update completed days for the contributions chart\n        const allCompletedDays = sortedCompletedDates.map((date)=>new Date(date)).filter((date)=>date.getFullYear() === selectedYear).map((date)=>Math.floor((date.getTime() - new Date(date.getFullYear(), 0, 0).getTime()) / (24 * 60 * 60 * 1000)));\n        setCompletedDays([\n            ...new Set(allCompletedDays)\n        ]);\n        // Update available years\n        const years = new Set();\n        currentTasks.forEach((task)=>{\n            if (task.completed_date) {\n                years.add(new Date(task.completed_date).getFullYear());\n            }\n        });\n        const sortedYears = Array.from(years).sort((a, b)=>b - a);\n        if (sortedYears.length === 0) {\n            setAvailableYears([\n                new Date().getFullYear()\n            ]);\n        } else {\n            setAvailableYears(sortedYears);\n        }\n        if (sortedYears.length > 0 && !sortedYears.includes(selectedYear)) {\n            setSelectedYear(sortedYears[0]);\n        }\n    }, [\n        selectedYear\n    ]);\n    const updateProject = async (id, name, tradingDaysPerWeek)=>{\n        if (!userId) return;\n        const { data, error } = await supabase.from(\"projects\").update({\n            name,\n            trading_days_per_week: tradingDaysPerWeek\n        }).eq(\"id\", id).eq(\"user_id\", userId).select();\n        if (error) {\n            console.error(\"Error updating project:\", error);\n            throw error;\n        }\n        if (data && data.length > 0) {\n            const updatedProject = data[0];\n            setProjects((prevProjects)=>prevProjects.map((p)=>p.id === id ? updatedProject : p));\n            if (currentProject && currentProject.id === id) {\n                setCurrentProject(updatedProject);\n            }\n            return updatedProject;\n        }\n    };\n    const deleteProject = async (id)=>{\n        if (!userId) return;\n        // First, delete all tasks associated with the project\n        const { error: tasksDeleteError } = await supabase.from(\"tasks\").delete().eq(\"project_id\", id);\n        if (tasksDeleteError) {\n            console.error(\"Error deleting project tasks:\", tasksDeleteError);\n            throw tasksDeleteError;\n        }\n        // Then, delete the project\n        const { error: projectDeleteError } = await supabase.from(\"projects\").delete().eq(\"id\", id).eq(\"user_id\", userId);\n        if (projectDeleteError) {\n            console.error(\"Error deleting project:\", projectDeleteError);\n            throw projectDeleteError;\n        }\n        setProjects((prevProjects)=>prevProjects.filter((p)=>p.id !== id));\n        if (currentProject && currentProject.id === id) {\n            const remainingProjects = projects.filter((p)=>p.id !== id);\n            setCurrentProject(remainingProjects.length > 0 ? remainingProjects[0] : null);\n        }\n    };\n    const reorderTasks = async (startIndex, endIndex)=>{\n        if (!currentProject) return;\n        console.log(\"Reordering tasks in hook:\", startIndex, endIndex);\n        const updatedTasks = Array.from(tasks);\n        const [reorderedItem] = updatedTasks.splice(startIndex, 1);\n        updatedTasks.splice(endIndex, 0, reorderedItem);\n        console.log(\"Updated tasks:\", updatedTasks);\n        // Update the order in the database\n        const updates = updatedTasks.map((task, index)=>({\n                id: task.id,\n                task_order: index\n            }));\n        const { data, error } = await supabase.from(\"tasks\").upsert(updates, {\n            onConflict: \"id\"\n        });\n        if (error) {\n            console.error(\"Error reordering tasks:\", error);\n            return;\n        }\n        console.log(\"Supabase response:\", data);\n        // Update the local state\n        setTasks(updatedTasks);\n    };\n    return {\n        projects,\n        currentProject,\n        setCurrentProject,\n        tasks,\n        streak,\n        completedToday,\n        completedDays,\n        selectedYear,\n        setSelectedYear,\n        availableYears,\n        addProject,\n        addTask,\n        deleteTask,\n        toggleComplete,\n        fetchProjects,\n        fetchTasks,\n        fetchCompletedDays,\n        updateProject,\n        deleteProject,\n        reorderTasks\n    };\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./hooks/use-trade-streak.ts\n"));

/***/ })

});